export IT="metro"
cf big

function struct_interface_inload(){
	export src="$1"
	export menu_src="$CORE/${src}/_lang_/_menu_${lang}"
	metroUi_menu_body
}

function metroUi_menu_body(){
	# Give SuperCharging notice when required
	check_sc && test -z "$SC_DENIED" && {
		if yesno "SuperCharging needed ..." "${_warning_}" "\n${_supercharging_notice_metroui_}" 7 70; then
			clear && cf small
			"$CORE/supercharge"
			cf big
		else
			export SC_DENIED=true
		fi
	}
	
	# Show notice when a new update is found
	test -e "$STATDIR/update" && test "$UPDATE_CHECK" != "no" && test -z "$UPDATE_DENIED" && {
		if yesno "${_new_update_}" "${_attention_}" "\n${_new_update_notice_metroui_}" 7 60; then
			clear && cf small
			"$CORE/update"
			pause
			cf big
		else
			export UPDATE_DENIED=true
		fi
	}
	
	calcTextDialogSize "$(< "$menu_src")"
	test "$RANDOM" -lt "$RANDOM" && topsep="-" || topsep="+"
	i=1 W=()
	
	while read -r line; do
		W+=($((i++)) "$line")
	done < "$menu_src"
	
	c="$(dialog --clear --backtitle "$(gecpc "${_press_esc_metroui_info_}" "$topsep")" \
				--title "  GearLock  " --ok-label Go --extra-button --extra-label Status \
				--cancel-label Help --help-button --help-label More --menu "\n    \n" \
				$(( $RECMD_HEIGHT + 8 )) $(( $RECMD_WIDTH + 35 )) 17 "${W[@]}" \
				3>&2 2>&1 1>&3)"
	RETC=$?

	if [ "$RETC" = "0" ]; then
		clear && test "$src" != "main.src" && cf small
		"$CORE/$src/$c"
		test "$src" != "main.src" && pause && cf big

	elif [ "$RETC" = "3" ]; then # Status button 
		cf small && gstatus
		pause && cf big

	elif [ "$RETC" = "1" ]; then # Help button
		clear && cf small && geco "${_ui_help_msg_}" && pause && cf big

	elif [ $RETC = 2 ]; then # Extras button
		while true; do
			cmd=(dialog --keep-tite --cancel-label Back --menu "More options" 15 60 15)
			choices=$("${cmd[@]}" \
								1 "${_metroui_more_menu_item_1_}" \
								2 "${_metroui_more_menu_item_2_}" \
								3 "${_metroui_more_menu_item_3_}" \
								4 "${_metroui_more_menu_item_4_}" \
								5 "${_metroui_more_menu_item_5_}" \
								6 "${_metroui_more_menu_item_6_}" 2>&1 >/dev/tty)
			test "$?" == "1" || test "$?" == "255" && break
			for choice in $choices; do
					case $choice in
						1)
							msgbox "GearLock About" "Some words" "${_ui_about_msg_}" 28 113
							;;
						2)
							clear && cf small && "$CORE/update"; pause && cf big
							;;
						3)
							cf small
							"$CORE/devz"
							cf big
							;;
						4) 
							"$CORE/settings"
							;;
						5) 
							msgbox "gearrec" "Info" "${_gearrec_info_}"
							;;
						6) 
							if yesno "${_googleless_mode_}" "Do you want to activate it ?" "${_googleless_mode_info_}" 10 60; then
								msgbox "GoogleLess-Mode" " Activating " "$(pm disable com.android.vending; pm disable com.google.android.gms)"
								touch "$GTMP/goolm"
							else
								msgbox "GoogleLess-Mode" " Deactivating " "$(pm enable com.android.vending; pm enable com.google.android.gms)"
								nout rm "$GTMP/goolm"
							fi
							;;
					esac
				done
		done

	elif [ "$RETC" = "255" ]; then
		if [ "$src" = "main.src" ]; then
			msgbox "Leaving GearLock" "Bye bye" "\nSee ya later ;)"
			exit_grl
		else
			exit 0
		fi
	fi
}

# Export fun
export -f metroUi_menu_body struct_interface_inload

# Runtime
struct_interface main.src 
